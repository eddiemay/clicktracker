<?xml version="1.0" encoding="UTF-8"?>
<!-- ================================================== -->
<!-- ===  Digital D4 | V2.0 Ant Build & Deployment Script  === -->
<!-- ===    Defaulted to java webstart deployment   === -->
<!-- === Distribution Staff Engineering             === -->
<!-- === Southern California Edison                 === -->
<!-- ================================================== -->
<project basedir="." default="redeploy" name="clicktracker">
	<property name="LIB.location" value="../common/lib"/>
	<!-- Specify the location of your workspace if it isn't
		 located in the default location.				    -->	
	<!-- ==================================== -->
	<!-- set global properties for this build -->
	<!-- ==================================== -->
	<property name="version" value="0.5"/>
	<property name="src" value="src"/>
	<property name="build" value="build"/>
	<property name="lib"  value="lib"/>
	<property name="native"  value="lib/native"/>
	<property name="classpath"  value="classes"/>
	<property name="docs" value="doc"/>
	<!-- 
	First thing is to add some tomcat stuff to your build.properties. It’s all self-explanatory (hopefully). 
	-->
	<!-- tomcat definitions -->
	<property name="tomcat.server" value="localhost"/>
	<property name="tomcat.manager.url" value="http://${tomcat.server}:8080/manager/text"/>
	<property name="tomcat.username" value="admin"/>
	<property name="tomcat.password" value="google2012"/>
	<property name="app.name" value="clicktracker"/>
	<!-- 
	Next, add the catalina ant tasks to your build.xml. The first thing to do is to create a classpath for your project which contains all the Tomcat JAR files inside common/lib and /bin, as well as the catalina-ant.jar which contains all the ant tasks.
	-->
	<path id="tomcat.classpath">
  	<fileset dir="../common/tomcat-7/lib">
        <include name="*.jar" />
    </fileset>
    <fileset dir="../common/tomcat-7/bin">
        <include name="*.jar" />
    </fileset>
 	</path>
  <path id="project.classpath">
	  <fileset dir="webapps/${app.name}/WEB-INF/lib">
	  	<include name="*.jar" />
	  </fileset>
 	</path>
	<!--Once you have set up the classpath, you can add the task: -->
	<taskdef resource="org/apache/catalina/ant/catalina.tasks" classpathref="tomcat.classpath" />
	<!-- Finally, you need to create the build targets to control ant. You can copy and paste this into your build.xml, although you will have to change the ‘war’ property to match the one from your servlet:
	-->
   <target name="deploy" description="Install application in Tomcat">
   	 <deploy url="${tomcat.manager.url}"
   			username="${tomcat.username}"
        password="${tomcat.password}"
        path="/${app.name}"
   			war="${basedir}/${app.name}.war" />
    </target>
    <target name="remove" description="Remove application from Tomcat">
        <undeploy url="${tomcat.manager.url}"
            username="${tomcat.username}"
            password="${tomcat.password}"
            path="/${app.name}"/>
    </target>
    <target name="reload" description="Reload application in Tomcat">
        <reload url="${tomcat.manager.url}"
            username="${tomcat.username}"
            password="${tomcat.password}"
            path="/${app.name}"/>
    </target>
    <target name="start" description="Start Tomcat application">
        <start url="${tomcat.manager.url}"
            username="${tomcat.username}"
            password="${tomcat.password}"
            path="/${app.name}"/>
    </target>
    <target name="stop" description="Stop Tomcat application">
        <stop url="${tomcat.manager.url}"
            username="${tomcat.username}"
            password="${tomcat.password}"
            path="/${app.name}"/>
    </target>
    <target name="list" description="List Tomcat applications">
        <list url="${tomcat.manager.url}"
            username="${tomcat.username}"
            password="${tomcat.password}"/>
    </target>
	<!-- I also added a task to redeploy a servlet as it saved me an extra click each time I change my build:
	-->
    <target name="redeploy" description="Redeploy application">
    	<antcall target="build-war" />
    	<antcall target="remove" />
    	<antcall target="list" />
        <antcall target="deploy" />
        <antcall target="clean" />
    </target>
    <!-- ==================================== -->
    <!-- Clean-up the build and dist dir.     -->		
    <!-- ==================================== -->	
	<target name="clean" description="Deletes files that should not be committed">
        <delete dir="webapps/${app.name}/WEB-INF/classes"/>
		<delete>
			<fileset dir="webapps/${app.name}/WEB-INF/lib">
				<include name="*.jar" />
			</fileset>
            <fileset dir="webapps/${app.name}/js">
                <include name="*.js" />
            </fileset>
            <fileset dir="webapps/${app.name}/js/html">
                <include name="*.html" />
            </fileset>
		</delete>
		<delete file="webapps/${app.name}/WEB-INF/web.xml"/>
    </target>
	<!-- ==================================== -->
	<!--        Build the source code         -->
	<!-- ==================================== -->	
	<target name="build" depends="clean" description="Compiles the classes">
        <echo message="${ant.project.name}: ${ant.file}"/>
		<mkdir dir="webapps/${app.name}/WEB-INF/classes"/>
		<!-- Compile the source files into the buid directory -->
		<copy todir="webapps/${app.name}/WEB-INF/lib">
			<fileset dir="../common/lib">
				<include name="commons-dbcp*.jar" />
				<include name="commons-pool*.jar" />
				<include name="javax.mail.jar" />
				<include name="joda-time*.jar" />
                <include name="gson-2.7.jar" />
                <include name="guava-20.0.jar" />
				<include name="mysql-connector*.jar" />
                <include name="protobuf-java-3.3.0-custom.jar" />
			</fileset>
		</copy>
        <copy todir="webapps/${app.name}/js/html" flatten="true">
            <fileset dir="../common/src/js/html">
                <include name="*.html"/>
            </fileset>
            <fileset dir="src/js/html">
                <include name="*.html"/>
            </fileset>
        </copy>
        <concat destfile="webapps/${app.name}/js/dd4common.js">
            <fileset dir="../common/src/js">
                <include name="*.js"/>
            </fileset>
        </concat>
		<concat destfile="webapps/${app.name}/js/${app.name}.js">
			<filelist dir="src/js" files="_bootstrap.js"/>
            <fileset dir="src-gen/js">
                <include name="*.js"/>
            </fileset>
            <fileset dir="src/js">
                <include name="*.js"/>
                <exclude name="_bootstrap.js"/>
            </fileset>
		</concat>
		<concat destfile="webapps/${app.name}/WEB-INF/web.xml">
			<filelist dir="conf" files="web.xml,dev_web.xml"/>
		</concat>
		<javac destdir="webapps/${app.name}/WEB-INF/classes" 
				includes="com/digitald4/${app.name}/server/ClickTracker.java"
				target="1.8" source="1.8" optimize="yes">
			<src path="../common/src" />
			<src path="../common/src-gen" />
			<src path="src" />
			<src path="src-gen" />
			<classpath refid="tomcat.classpath"/>
      <classpath refid="project.classpath"/>
    </javac>
		<tstamp>
			<format property="BUILDTIME" pattern="yyyy-MM-dd HH:mm" />
		</tstamp>
    </target>
	<target name="build-war" depends="build" description="Builds the WAR">		
		<war warfile="${app.name}.war" basedir="webapps/${app.name}"/>
	</target>
</project>